name: Release

on:
  push:
    tags:
      - v*

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  build-macos:
    runs-on: macos-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - name: Build Frontend
        run: cd $GITHUB_WORKSPACE/tanoshi-web && yarn install && cargo install wasm-bindgen-cli wasm-pack && yarn build
      - name: Build Backend
        run: cd $GITHUB_WORKSPACE/tanoshi && cargo build --release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ github.workspace }}/target/release/tanoshi
          asset_name: tanoshi-macos
          asset_content_type: application/octet-stream
  build-linux:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - name: Build Frontend
        run: cd /home/runner/work/tanoshi/tanoshi/tanoshi-web && yarn install && cargo install wasm-bindgen-cli wasm-pack && yarn build
      - name: Build Backend
        run: cd /home/runner/work/tanoshi/tanoshi/tanoshi && cargo build --release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ github.workspace }}/target/release/tanoshi
          asset_name: tanoshi-linux
          asset_content_type: application/octet-stream      
  build-windows:
    runs-on: windows-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v2
      - name: Build Frontend
        run: cd $Env:GITHUB_WORKSPACE\tanoshi-web && yarn install && cargo install wasm-bindgen-cli wasm-pack && yarn build
      - name: Build Backend
        run: cd $Env:GITHUB_WORKSPACE\tanoshi && cargo build
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ github.workspace }}\target\release\tanoshi.exe
          asset_name: tanoshi-win.exe
          asset_content_type: application/octet-stream
